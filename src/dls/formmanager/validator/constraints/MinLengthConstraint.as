/* * This file is part of the FormManager package. * * @author (c) Tim Shelburne <tim@dontlookstudios.com> * * For the full copyright and license information, please view the LICENSE * file that was distributed with this source code. */ package dls.formmanager.validator.constraints {		import dls.formmanager.form.IFormElement;	import dls.formmanager.validator.constraints.IConstraint;	import dls.formmanager.validator.errors.IValidationError;	import dls.formmanager.validator.errors.ValidationError;		/*	 * A constraint that enforces a min length on a value.	 */	public class MinLengthConstraint implements IConstraint {				public function shouldHandle(klass:String):Boolean {			return klass == "minLength";		}				public function validate(element:IFormElement):Vector.<IValidationError> {			var minLength:int = int(element.validationRules['minLength']);						if (element.value.hasOwnProperty('length')) {				if (element.value.length < minLength) {					return new <IValidationError>[ new ValidationError(element, "The field has a minimum length of " + minLength + ".") ];				}			}			else {				throw new Error("The element value must have a length property.");			}						return new <IValidationError>[];		}	}	}