/* * This file is part of the FormManager package. * * @author (c) Tim Shelburne <tim@dontlookstudios.com> * * For the full copyright and license information, please view the LICENSE * file that was distributed with this source code. */package dls.formmanager.form {		import dls.debugger.Debug;	import dls.formmanager.form.IFormElement;	import dls.formmanager.validator.errors.IValidationError;		import org.osflash.signals.Signal;
		/*	 * This class is used to represent non-interactable items in forms.	 */	public class HiddenElement implements IFormElement {				/*=========================================================*		 * PROPERTIES		 *=========================================================*/		 		private var _name:String;		public function get name():String {			return _name;		}				private var _value:*;		public function get value():* {			return _value;		}				private var _valueChanged:Signal = new Signal();		public function get valueChanged():Signal { return _valueChanged; }				public function get validationRules():Object {			return {};		}				/*=========================================================*		 * FUNCTIONS		 *=========================================================*/		public function HiddenElement(aName:String, aValue:*) {			_name = aName;			_value = aValue;		}				/**
		 * allow resetting the value of a hidden element
		 */		public function resetValue(aValue:*):void {			_value = aValue;			_valueChanged.dispatch(this);		}				/**
		 * because the element is hidden, the only feedback to give is through tracing to the console
		 */		public function addValidationError(error:IValidationError):void {			Debug.out("Validation error: " + error.message + " (" + error.element + ")");		}				/**
		 * empty function, hidden element will never respond to removing errors
		 */		public function removeValidationError(error:IValidationError):void {					}				/**
		 * empty function, hidden element will never respond to removing errors
		 */		public function clearValidationErrors():void {					}	}	}